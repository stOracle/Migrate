<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2014 (x64) - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:n1="http://oracle.com/datamodeler/reports/udp" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exclude-result-prefixes="altova altovaext clitype fn iso4217 ix java link n1 sps xbrldi xbrli xlink xs xsd xsi">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
				<meta name="generator" content="Altova StyleVision Enterprise Edition 2014 (x64) (http://www.altova.com)"/>
				<meta http-equiv="X-UA-Compatible" content="IE=7"/>
				<xsl:comment>[if IE]&gt;&lt;STYLE type=&quot;text/css&quot;&gt;.altova-rotate-left-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3)} .altova-rotate-right-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1)} &lt;/STYLE&gt;&lt;![endif]</xsl:comment>
				<xsl:comment>[if !IE]&gt;&lt;!</xsl:comment>
				<style type="text/css">.altova-rotate-left-textbox{-webkit-transform: rotate(-90deg) translate(-100%, 0%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(-90deg) translate(-100%, 0%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(-90deg) translate(-100%, 0%); -ms-transform-origin: 0% 0%;}.altova-rotate-right-textbox{-webkit-transform: rotate(90deg) translate(0%, -100%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(90deg) translate(0%, -100%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(90deg) translate(0%, -100%); -ms-transform-origin: 0% 0%;}</style>
				<xsl:comment>&lt;![endif]</xsl:comment>
				<style type="text/css">@page { margin-left:2cm; margin-right:2cm; margin-top:2cm; margin-bottom:2cm } @media print { br.altova-page-break { page-break-before: always; } }</style>
			</head>
			<body style="empty-cells:show; font-family:Tahoma; font-size:xx-small; text-align:left; vertical-align:top; word-wrap:break-word; ">
				<xsl:for-each select="$XML">
					<xsl:for-each select="n1:UDP">
						<xsl:call-template name="Wide_CRLF"/>
						<center>
							<xsl:for-each select="n1:ReportCaption">
								<span style="font-size:medium; font-weight:bold; ">
									<xsl:apply-templates/>
								</span>
							</xsl:for-each>
						</center>
						<xsl:call-template name="Wide_CRLF"/>
						<br/>
						<table style="border-collapse:collapse; width:20cm; " border="0" cellpadding="3" cellspacing="0">
							<xsl:variable name="altova:CurrContextGrid_0" select="."/>
							<tbody>
								<tr>
									<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
										<span>
											<xsl:text>Design Name</xsl:text>
										</span>
									</td>
									<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; width:16cm; ">
										<xsl:choose>
											<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
												<xsl:for-each select="n1:DesignName">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
												<xsl:choose>
													<xsl:when test="string-length(n1:DesignName) &gt; 0">
														<xsl:for-each select="n1:DesignName">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
													</xsl:otherwise>
												</xsl:choose>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
												<xsl:for-each select="n1:DesignName">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
												<xsl:for-each select="n1:DesignName">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
												<xsl:for-each select="n1:DesignName">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
										</xsl:choose>
									</td>
								</tr>
								<tr>
									<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
										<span>
											<xsl:text>Version Date</xsl:text>
										</span>
									</td>
									<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:16cm; ">
										<xsl:choose>
											<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
												<xsl:for-each select="n1:VersionDate">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
												<xsl:choose>
													<xsl:when test="string-length(n1:VersionDate) &gt; 0">
														<xsl:for-each select="n1:VersionDate">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
													</xsl:otherwise>
												</xsl:choose>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
												<xsl:for-each select="n1:VersionDate">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
												<xsl:for-each select="n1:VersionDate">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
												<xsl:for-each select="n1:VersionDate">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
										</xsl:choose>
									</td>
								</tr>
								<tr>
									<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
										<span>
											<xsl:text>Version Comment</xsl:text>
										</span>
									</td>
									<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:16cm; ">
										<xsl:choose>
											<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
												<xsl:for-each select="n1:VersionComment">
													<xsl:for-each select="n1:VersionCommentDetails">
														<xsl:for-each select="n1:VersionCommentRow">
															<xsl:apply-templates/>
															<br/>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
												<xsl:choose>
													<xsl:when test="count(n1:VersionComment/n1:VersionCommentDetails/n1:VersionCommentRow) &gt; 0">
														<xsl:for-each select="n1:VersionComment">
															<xsl:for-each select="n1:VersionCommentDetails">
																<xsl:for-each select="n1:VersionCommentRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
													</xsl:otherwise>
												</xsl:choose>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
												<xsl:choose>
													<xsl:when test="count(n1:VersionComment/n1:VersionCommentDetails/n1:VersionCommentRow) &gt; 0">
														<xsl:for-each select="n1:VersionComment">
															<xsl:for-each select="n1:VersionCommentDetails">
																<xsl:for-each select="n1:VersionCommentRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise/>
												</xsl:choose>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
												<xsl:for-each select="n1:VersionComment">
													<xsl:for-each select="n1:VersionCommentDetails">
														<xsl:for-each select="n1:VersionCommentRow">
															<xsl:apply-templates/>
															<br/>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
												<xsl:for-each select="n1:VersionComment">
													<xsl:for-each select="n1:VersionCommentDetails">
														<xsl:for-each select="n1:VersionCommentRow">
															<xsl:apply-templates/>
															<br/>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:when>
										</xsl:choose>
									</td>
								</tr>
							</tbody>
						</table>
						<xsl:call-template name="Double_CRLF"/>
						<br/>
						<table style="border-collapse:collapse; width:25cm; " border="0" cellpadding="3" cellspacing="0">
							<xsl:variable name="altova:CurrContextGrid_1" select="."/>
							<thead style="background-color:#d9f5ff; ">
								<tr>
									<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; font-weight:bold; text-align:center; width:5cm; word-wrap:break-word; ">
										<span style="font-weight:bold; ">
											<xsl:text>Name</xsl:text>
										</span>
										<br/>
										<span style="font-weight:bold; ">
											<xsl:text>File Name</xsl:text>
										</span>
									</th>
									<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; font-weight:bold; text-align:center; width:5cm; word-wrap:break-word; ">
										<span style="font-weight:bold; ">
											<xsl:text>Display Name</xsl:text>
										</span>
									</th>
									<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:1cm; word-wrap:break-word; ">
										<span style="font-weight:bold; ">
											<xsl:text>Type</xsl:text>
										</span>
									</th>
									<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:4cm; word-wrap:break-word; ">
										<span style="font-weight:bold; ">
											<xsl:text>Description</xsl:text>
										</span>
									</th>
									<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:4.5cm; word-wrap:break-word; ">
										<span style="font-weight:bold; ">
											<xsl:text>Objects</xsl:text>
										</span>
									</th>
									<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:3cm; word-wrap:break-word; ">
										<span style="font-weight:bold; ">
											<xsl:text>List Of Values</xsl:text>
										</span>
									</th>
									<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:1.5cm; word-wrap:break-word; ">
										<span style="font-weight:bold; ">
											<xsl:text>Default Value</xsl:text>
										</span>
									</th>
								</tr>
							</thead>
							<tbody>
								<xsl:for-each select="n1:UDPCollection">
									<xsl:for-each select="n1:UDPDetails">
										<tr>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:5cm; word-wrap:break-word; ">
												<a>
													<xsl:attribute name="name">
														<xsl:value-of select="n1:Name"/>
													</xsl:attribute>
													<xsl:choose>
														<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
															<xsl:for-each select="n1:Name">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="substring-before(.,&apos;/&apos;)"/>
																</span>
																<br/>
																<br/>
																<div style="margin-left:1em; ">
																	<span>
																		<xsl:value-of select="substring-after(.,&apos;/&apos;)"/>
																	</span>
																</div>
															</xsl:for-each>
														</xsl:when>
														<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
															<xsl:choose>
																<xsl:when test="string-length(n1:Name) &gt; 0">
																	<xsl:for-each select="n1:Name">
																		<span style="font-weight:bold; ">
																			<xsl:value-of select="substring-before(.,&apos;/&apos;)"/>
																		</span>
																		<br/>
																		<br/>
																		<div style="margin-left:1em; ">
																			<span>
																				<xsl:value-of select="substring-after(.,&apos;/&apos;)"/>
																			</span>
																		</div>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																	<span>
																		<xsl:text>&#160;</xsl:text>
																	</span>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:when>
														<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
															<xsl:for-each select="n1:Name">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="substring-before(.,&apos;/&apos;)"/>
																</span>
																<br/>
																<br/>
																<div style="margin-left:1em; ">
																	<span>
																		<xsl:value-of select="substring-after(.,&apos;/&apos;)"/>
																	</span>
																</div>
															</xsl:for-each>
														</xsl:when>
														<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
															<xsl:for-each select="n1:Name">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="substring-before(.,&apos;/&apos;)"/>
																</span>
																<br/>
																<br/>
																<div style="margin-left:1em; ">
																	<span>
																		<xsl:value-of select="substring-after(.,&apos;/&apos;)"/>
																	</span>
																</div>
															</xsl:for-each>
														</xsl:when>
														<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
															<xsl:for-each select="n1:Name">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="substring-before(.,&apos;/&apos;)"/>
																</span>
																<br/>
																<br/>
																<div style="margin-left:1em; ">
																	<span>
																		<xsl:value-of select="substring-after(.,&apos;/&apos;)"/>
																	</span>
																</div>
															</xsl:for-each>
														</xsl:when>
													</xsl:choose>
												</a>
											</td>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:5cm; word-wrap:break-word; ">
												<xsl:choose>
													<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
														<xsl:for-each select="n1:DisplayName">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
														<xsl:choose>
															<xsl:when test="string-length(n1:DisplayName) &gt; 0">
																<xsl:for-each select="n1:DisplayName">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
														<xsl:for-each select="n1:DisplayName">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
														<xsl:for-each select="n1:DisplayName">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
														<xsl:for-each select="n1:DisplayName">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
												</xsl:choose>
											</td>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; text-align:center; width:1cm; word-wrap:break-word; ">
												<xsl:choose>
													<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
														<xsl:for-each select="n1:Type">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
														<xsl:choose>
															<xsl:when test="string-length(n1:Type) &gt; 0">
																<xsl:for-each select="n1:Type">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
														<xsl:for-each select="n1:Type">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
														<xsl:for-each select="n1:Type">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
														<xsl:for-each select="n1:Type">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
												</xsl:choose>
											</td>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; word-wrap:break-word; ">
												<xsl:choose>
													<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
														<xsl:for-each select="n1:Description">
															<xsl:for-each select="n1:DescriptionDetails">
																<xsl:for-each select="n1:DescriptionRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
														<xsl:choose>
															<xsl:when test="count(n1:Description/n1:DescriptionDetails/n1:DescriptionRow) &gt; 0">
																<xsl:for-each select="n1:Description">
																	<xsl:for-each select="n1:DescriptionDetails">
																		<xsl:for-each select="n1:DescriptionRow">
																			<xsl:apply-templates/>
																			<br/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
														<xsl:choose>
															<xsl:when test="count(n1:Description) &gt; 0">
																<xsl:for-each select="n1:Description">
																	<xsl:for-each select="n1:DescriptionDetails">
																		<xsl:for-each select="n1:DescriptionRow">
																			<xsl:apply-templates/>
																			<br/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise/>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
														<xsl:for-each select="n1:Description">
															<xsl:for-each select="n1:DescriptionDetails">
																<xsl:for-each select="n1:DescriptionRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
														<xsl:for-each select="n1:Description">
															<xsl:for-each select="n1:DescriptionDetails">
																<xsl:for-each select="n1:DescriptionRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
												</xsl:choose>
											</td>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4.5cm; word-wrap:break-word; ">
												<xsl:if test="count(n1:ObjectsScopeCollection)">
													<table style="border-collapse:collapse; width:5cm; " border="0" cellpadding="3" cellspacing="0">
														<xsl:variable name="altova:CurrContextGrid_2" select="."/>
														<thead style="background-color:#d9f5ff; ">
															<tr>
																<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; font-weight:bold; text-align:center; width:2cm; word-wrap:break-word; ">
																	<span>
																		<xsl:text>Object Type</xsl:text>
																	</span>
																</th>
																<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; font-weight:bold; text-align:center; width:1cm; word-wrap:break-word; ">
																	<span>
																		<xsl:text>Visible</xsl:text>
																	</span>
																</th>
																<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; font-weight:bold; text-align:center; width:1cm; word-wrap:break-word; ">
																	<span>
																		<xsl:text>Color</xsl:text>
																	</span>
																</th>
															</tr>
														</thead>
														<tbody>
															<xsl:for-each select="n1:ObjectsScopeCollection">
																<xsl:for-each select="n1:ObjectDetails">
																	<tr>
																		<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:2cm; word-wrap:break-word; ">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="n1:Type">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length(n1:Type) &gt; 0">
																							<xsl:for-each select="n1:Type">
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<span>
																								<xsl:text>&#160;</xsl:text>
																							</span>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="n1:Type">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="n1:Type">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="n1:Type">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</td>
																		<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; text-align:center; width:1cm; word-wrap:break-word; ">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="n1:IsVisible">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length(n1:IsVisible) &gt; 0">
																							<xsl:for-each select="n1:IsVisible">
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<span>
																								<xsl:text>&#160;</xsl:text>
																							</span>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="n1:IsVisible">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="n1:IsVisible">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="n1:IsVisible">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</td>
																		<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; text-align:center; width:1cm; word-wrap:break-word; ">
																			<table style="border-collapse:collapse; " width="100%">
																				<xsl:variable name="altova:CurrContextGrid_3" select="."/>
																				<tbody>
																					<tr>
																						<td style="background-color:{n1:Color}; width:1cm; word-wrap:break-word; ">
																							<span>
																								<xsl:text>&#160;</xsl:text>
																							</span>
																						</td>
																					</tr>
																				</tbody>
																			</table>
																		</td>
																	</tr>
																</xsl:for-each>
															</xsl:for-each>
														</tbody>
													</table>
												</xsl:if>
											</td>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:3cm; word-wrap:break-word; ">
												<xsl:if test="count(n1:LOVCollection)">
													<table style="border-collapse:collapse; width:2cm; " border="0" cellpadding="3" cellspacing="0">
														<xsl:variable name="altova:CurrContextGrid_4" select="."/>
														<tbody>
															<xsl:for-each select="n1:LOVCollection">
																<xsl:for-each select="n1:LOVDetails">
																	<tr>
																		<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; width:1.5cm; word-wrap:break-word; ">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="n1:Value">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length(n1:Value) &gt; 0">
																							<xsl:for-each select="n1:Value">
																								<xsl:apply-templates/>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<span>
																								<xsl:text>&#160;</xsl:text>
																							</span>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="n1:Value">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="n1:Value">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="n1:Value">
																						<xsl:apply-templates/>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</td>
																	</tr>
																</xsl:for-each>
															</xsl:for-each>
														</tbody>
													</table>
												</xsl:if>
											</td>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:1.5cm; word-wrap:break-word; ">
												<xsl:choose>
													<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
														<xsl:for-each select="n1:DefaultValue">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
														<xsl:choose>
															<xsl:when test="string-length(n1:DefaultValue) &gt; 0">
																<xsl:for-each select="n1:DefaultValue">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
														<xsl:for-each select="n1:DefaultValue">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
														<xsl:for-each select="n1:DefaultValue">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
														<xsl:for-each select="n1:DefaultValue">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
												</xsl:choose>
											</td>
										</tr>
									</xsl:for-each>
								</xsl:for-each>
							</tbody>
						</table>
					</xsl:for-each>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
	<xsl:template name="Single_CRLF">
		<div>
			<span>
				<xsl:text>&#160;</xsl:text>
			</span>
		</div>
	</xsl:template>
	<xsl:template name="Double_CRLF">
		<xsl:choose>
			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
				<xsl:call-template name="Single_CRLF"/>
			</xsl:when>
			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;"/>
			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;"/>
			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
				<xsl:call-template name="Single_CRLF"/>
			</xsl:when>
			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
				<xsl:call-template name="Single_CRLF"/>
			</xsl:when>
		</xsl:choose>
		<br/>
	</xsl:template>
	<xsl:template name="Wide_CRLF">
		<p style="margin-bottom:0.7em; margin-top:0.7em; "/>
	</xsl:template>
</xsl:stylesheet>
