<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.0'>
      <aliases enabled='yes' />
      <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.10000000000000001'>
        <calculation class='tableau' formula='0.10000000000000001' />
        <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
      </column>
      <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <range granularity='0.01' max='0.10000000000000001' min='0.0' />
      </column>
    </datasource>
    <datasource caption='Super Store Orders Extract' inline='true' name='federated.0s5ucnr0sb8zl31d7j80g1wauq8d' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Super Store Orders' name='dataengine.0fblyhc0j3v6hw1cbme5t1b0y9iq'>
            <connection class='dataengine' dbname='C:\DataVisualization\Tableau\Super Store Orders.tde' schema='Extract' tablename='Extract'>
              <calculations>
                <calculation column='[Number of Records]' formula='1' />
              </calculations>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='dataengine.0fblyhc0j3v6hw1cbme5t1b0y9iq' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CATEGORY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CATEGORY]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CATEGORY</remote-alias>
            <ordinal>0</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Appliances&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Telephones and Communication&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>1</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1523</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aberdeen&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zibo&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTAINER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTAINER]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CONTAINER</remote-alias>
            <ordinal>2</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Jumbo Box&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Wrap Bag&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTINENT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTINENT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CONTINENT</remote-alias>
            <ordinal>3</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Africa&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;South America&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_REGION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY_REGION]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>COUNTRY_REGION</remote-alias>
            <ordinal>4</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>50</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Algeria&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Viet Nam&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_ID</remote-name>
            <remote-type>4</remote-type>
            <local-name>[CUSTOMER_ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CUSTOMER_ID</remote-alias>
            <ordinal>5</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3403</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>3403.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUSTOMER_NAME]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CUSTOMER_NAME</remote-alias>
            <ordinal>6</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3403</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aaron Davies Bruce&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zachary Yu&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_SEGMENT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUSTOMER_SEGMENT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CUSTOMER_SEGMENT</remote-alias>
            <ordinal>7</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Small Business&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPARTMENT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DEPARTMENT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DEPARTMENT</remote-alias>
            <ordinal>8</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISCOUNT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DISCOUNT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DISCOUNT</remote-alias>
            <ordinal>9</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>16</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>0.25</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ITEM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ITEM]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ITEM</remote-alias>
            <ordinal>10</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1260</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;\#10 Self-Seal White Envelopes&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;iDENi80s&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_DATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORDER_DATE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ORDER_DATE</remote-alias>
            <ordinal>12</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1427</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010-01-01&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2013-12-31&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_ID</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ORDER_ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ORDER_ID</remote-alias>
            <ordinal>13</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11270</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>3.0</statistic>
              <statistic aggregation='Max' datatype='real'>91591.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_PRIORITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORDER_PRIORITY]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ORDER_PRIORITY</remote-alias>
            <ordinal>14</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Critical&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Not Specified&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_QUANTITY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ORDER_QUANTITY]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ORDER_QUANTITY</remote-alias>
            <ordinal>15</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>139</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>180.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POSTAL_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[POSTAL_CODE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>POSTAL_CODE</remote-alias>
            <ordinal>16</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1725</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;10004&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;WC2A&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRODUCT_BASE_MARGIN</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PRODUCT_BASE_MARGIN]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>PRODUCT_BASE_MARGIN</remote-alias>
            <ordinal>17</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>52</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.34999999999999998</statistic>
              <statistic aggregation='Max' datatype='real'>0.84999999999999998</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROFIT</remote-name>
            <remote-type>4</remote-type>
            <local-name>[PROFIT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>PROFIT</remote-alias>
            <ordinal>18</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3341</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>-17686.0</statistic>
              <statistic aggregation='Max' datatype='real'>60844.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REGION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[REGION]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>REGION</remote-alias>
            <ordinal>19</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ROW_ID</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ROW_ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ROW_ID</remote-alias>
            <ordinal>20</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>16798</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>16798.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SALES</remote-name>
            <remote-type>4</remote-type>
            <local-name>[SALES]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SALES</remote-alias>
            <ordinal>21</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4548</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>100119.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHIPPING_COST</remote-name>
            <remote-type>4</remote-type>
            <local-name>[SHIPPING_COST]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SHIPPING_COST</remote-alias>
            <ordinal>22</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>86</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>165.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHIP_DATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SHIP_DATE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SHIP_DATE</remote-alias>
            <ordinal>23</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1459</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010-01-02&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2014-01-17&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHIP_MODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SHIP_MODE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SHIP_MODE</remote-alias>
            <ordinal>24</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Delivery Truck&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Regular Air&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>25</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>149</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Addis Ababa&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;le-de-France&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT_PRICE</remote-name>
            <remote-type>4</remote-type>
            <local-name>[UNIT_PRICE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>UNIT_PRICE</remote-alias>
            <ordinal>26</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>237</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>6783.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Category' datatype='string' name='[CATEGORY]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Container' datatype='string' name='[CONTAINER]' role='dimension' type='nominal' />
      <column caption='Continent' datatype='string' name='[CONTINENT]' role='dimension' type='nominal' />
      <column caption='Country Region' datatype='string' name='[COUNTRY_REGION]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Customer Id' datatype='real' name='[CUSTOMER_ID]' role='dimension' type='ordinal' />
      <column caption='Customer Name' datatype='string' name='[CUSTOMER_NAME]' role='dimension' type='nominal' />
      <column caption='Customer Segment' datatype='string' name='[CUSTOMER_SEGMENT]' role='dimension' type='nominal' />
      <column caption='KPI - Profit Ratio' datatype='real' name='[Calculation_560698160265564162]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([PROFIT])/Sum([SALES])' />
      </column>
      <column caption='Department' datatype='string' name='[DEPARTMENT]' role='dimension' type='nominal' />
      <column caption='Discount' datatype='real' name='[DISCOUNT]' role='measure' type='quantitative' />
      <column caption='Item' datatype='string' name='[ITEM]' role='dimension' type='nominal' />
      <column caption='KPI - Profit Ratio Low to High' datatype='string' name='[KPI - Profit Ratio (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF sum([PROFIT])/sum([SALES]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF sum([PROFIT])/sum([SALES]) &lt;= [Parameters].[KPI Low (copy)] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Order Date' datatype='string' name='[ORDER_DATE]' role='dimension' type='nominal' />
      <column caption='Order Id' datatype='real' name='[ORDER_ID]' role='dimension' type='ordinal' />
      <column caption='Order Priority' datatype='string' name='[ORDER_PRIORITY]' role='dimension' type='nominal' />
      <column caption='Order Quantity' datatype='real' name='[ORDER_QUANTITY]' role='measure' type='quantitative' />
      <column caption='Postal Code' datatype='string' name='[POSTAL_CODE]' role='dimension' type='nominal' />
      <column caption='Product Base Margin' datatype='real' name='[PRODUCT_BASE_MARGIN]' role='measure' type='quantitative' />
      <column caption='Profit' datatype='real' name='[PROFIT]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal' />
      <column caption='Row Id' datatype='real' name='[ROW_ID]' role='dimension' type='ordinal' />
      <column caption='Sales' datatype='real' name='[SALES]' role='measure' type='quantitative' />
      <column caption='Shipping Cost' datatype='real' name='[SHIPPING_COST]' role='measure' type='quantitative' />
      <column caption='Ship Date' datatype='string' name='[SHIP_DATE]' role='dimension' type='nominal' />
      <column caption='Ship Mode' datatype='string' name='[SHIP_MODE]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Unit Price' datatype='real' name='[UNIT_PRICE]' role='measure' type='quantitative' />
      <group name='[Four Highest Sales Categories]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[CATEGORY]' member='&quot;Chairs  and  Chairmats&quot;' />
          <groupfilter function='member' level='[CATEGORY]' member='&quot;Office Machines&quot;' />
          <groupfilter function='member' level='[CATEGORY]' member='&quot;Tables&quot;' />
          <groupfilter function='member' level='[CATEGORY]' member='&quot;Telephones and Communication&quot;' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='COUNTRY_REGION, STATE, CITY'>
          <field>[COUNTRY_REGION]</field>
          <field>[STATE]</field>
          <field>[CITY]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.509259' group-percentage='0.0432099' measure-ordering='alphabetic' measure-percentage='0.367284' parameter-percentage='0.0802469' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.10000000000000001'>
          <calculation class='tableau' formula='0.10000000000000001' />
          <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
        </column>
        <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
          <calculation class='tableau' formula='0.0' />
          <range granularity='0.01' max='0.10000000000000001' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Crosstab + KPI'>
      <table>
        <view>
          <datasources>
            <datasource caption='Super Store Orders Extract' name='federated.0s5ucnr0sb8zl31d7j80g1wauq8d' />
          </datasources>
          <datasource-dependencies datasource='federated.0s5ucnr0sb8zl31d7j80g1wauq8d'>
            <column caption='Category' datatype='string' name='[CATEGORY]' role='dimension' type='nominal' />
            <column caption='Country Region' datatype='string' name='[COUNTRY_REGION]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='KPI - Profit Ratio' datatype='real' name='[Calculation_560698160265564162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([PROFIT])/Sum([SALES])' />
            </column>
            <column caption='Profit' datatype='real' name='[PROFIT]' role='measure' type='quantitative' />
            <column caption='Sales' datatype='real' name='[SALES]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[CATEGORY]' derivation='None' name='[none:CATEGORY:nk]' pivot='key' type='nominal' />
            <column-instance column='[COUNTRY_REGION]' derivation='None' name='[none:COUNTRY_REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[SALES]' derivation='Sum' name='[sum:SALES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_560698160265564162]' derivation='User' name='[usr:Calculation_560698160265564162:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_REGION:nk]' member='&quot;United States of America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[usr:Calculation_560698160265564162:qk]' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[usr:Calculation_560698160265564162:qk]' />
              <text column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[sum:SALES:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:STATE:nk]</rows>
        <cols>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CATEGORY:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Super Store Orders Extract' name='federated.0s5ucnr0sb8zl31d7j80g1wauq8d' />
          </datasources>
          <datasource-dependencies datasource='federated.0s5ucnr0sb8zl31d7j80g1wauq8d'>
            <column caption='Category' datatype='string' name='[CATEGORY]' role='dimension' type='nominal' />
            <column caption='Country Region' datatype='string' name='[COUNTRY_REGION]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='KPI - Profit Ratio' datatype='real' name='[Calculation_560698160265564162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([PROFIT])/Sum([SALES])' />
            </column>
            <column caption='Profit' datatype='real' name='[PROFIT]' role='measure' type='quantitative' />
            <column caption='Sales' datatype='real' name='[SALES]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Four Highest Sales Categories]' derivation='InOut' name='[io:Four Highest Sales Categories:nk]' pivot='key' type='nominal' />
            <column-instance column='[CATEGORY]' derivation='None' name='[none:CATEGORY:nk]' pivot='key' type='nominal' />
            <column-instance column='[COUNTRY_REGION]' derivation='None' name='[none:COUNTRY_REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[SALES]' derivation='Sum' name='[sum:SALES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_560698160265564162]' derivation='User' name='[usr:Calculation_560698160265564162:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[io:Four Highest Sales Categories:nk]'>
            <groupfilter function='member' level='[io:Four Highest Sales Categories:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_REGION:nk]' member='&quot;United States of America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[io:Four Highest Sales Categories:nk]</column>
            <column>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[usr:Calculation_560698160265564162:qk]' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[usr:Calculation_560698160265564162:qk]' />
              <text column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[sum:SALES:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:STATE:nk]</rows>
        <cols>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CATEGORY:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Four Highest'>
      <table>
        <view>
          <datasources>
            <datasource caption='Super Store Orders Extract' name='federated.0s5ucnr0sb8zl31d7j80g1wauq8d' />
          </datasources>
          <datasource-dependencies datasource='federated.0s5ucnr0sb8zl31d7j80g1wauq8d'>
            <column caption='Category' datatype='string' name='[CATEGORY]' role='dimension' type='nominal' />
            <column caption='Country Region' datatype='string' name='[COUNTRY_REGION]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Sales' datatype='real' name='[SALES]' role='measure' type='quantitative' />
            <column-instance column='[CATEGORY]' derivation='None' name='[none:CATEGORY:nk]' pivot='key' type='nominal' />
            <column-instance column='[COUNTRY_REGION]' derivation='None' name='[none:COUNTRY_REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[SALES]' derivation='Sum' name='[sum:SALES:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_REGION:nk]' member='&quot;United States of America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[sum:SALES:qk]</rows>
        <cols>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CATEGORY:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Sales Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Super Store Orders Extract' name='federated.0s5ucnr0sb8zl31d7j80g1wauq8d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0s5ucnr0sb8zl31d7j80g1wauq8d'>
            <column caption='Category' datatype='string' name='[CATEGORY]' role='dimension' type='nominal' />
            <column caption='Country Region' datatype='string' name='[COUNTRY_REGION]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='KPI - Profit Ratio' datatype='real' name='[Calculation_560698160265564162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([PROFIT])/Sum([SALES])' />
            </column>
            <column caption='Profit' datatype='real' name='[PROFIT]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[SALES]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[COUNTRY_REGION]' derivation='None' name='[none:COUNTRY_REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[REGION]' derivation='None' name='[none:REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_560698160265564162]' derivation='User' name='[usr:Calculation_560698160265564162:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[Four Highest Sales Categories]' />
          <filter class='categorical' column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_REGION:nk]' member='&quot;United States of America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]</column>
            <column>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[Four Highest Sales Categories]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[usr:Calculation_560698160265564162:qk]' />
              <text column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:REGION:nk]' />
              <lod column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]' />
              <lod column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:STATE:nk]' />
              <geometry column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[Latitude (generated)]</rows>
        <cols>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Sales Map 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Super Store Orders Extract' name='federated.0s5ucnr0sb8zl31d7j80g1wauq8d' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.10000000000000001'>
              <calculation class='tableau' formula='0.10000000000000001' />
              <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
            </column>
            <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
              <range granularity='0.01' max='0.10000000000000001' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0s5ucnr0sb8zl31d7j80g1wauq8d'>
            <column caption='Category' datatype='string' name='[CATEGORY]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Country Region' datatype='string' name='[COUNTRY_REGION]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='KPI - Profit Ratio Low to High' datatype='string' name='[KPI - Profit Ratio (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF sum([PROFIT])/sum([SALES]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF sum([PROFIT])/sum([SALES]) &lt;= [Parameters].[KPI Low (copy)] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column caption='Profit' datatype='real' name='[PROFIT]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[SALES]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[COUNTRY_REGION]' derivation='None' name='[none:COUNTRY_REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[REGION]' derivation='None' name='[none:REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI - Profit Ratio (copy)]' derivation='User' name='[usr:KPI - Profit Ratio (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[Four Highest Sales Categories]' />
          <filter class='categorical' column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_REGION:nk]' member='&quot;United States of America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]</column>
            <column>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[Four Highest Sales Categories]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[usr:KPI - Profit Ratio (copy):nk]' />
              <text column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:REGION:nk]' />
              <lod column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]' />
              <lod column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:STATE:nk]' />
              <lod column='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CITY:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[Latitude (generated)]</rows>
        <cols>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='37'>
    <window class='worksheet' name='Crosstab + KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[usr:Calculation_560698160265564162:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CATEGORY:nk]</field>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]</field>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:STATE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[usr:Calculation_560698160265564162:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[Four Highest Sales Categories]</field>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CATEGORY:nk]</field>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]</field>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:STATE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Four Highest'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CATEGORY:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[sum:SALES:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CATEGORY:nk]</field>
                  <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[sum:SALES:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Telephones and Communication&quot;</value>
                <value>1144284.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CATEGORY:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[sum:SALES:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CATEGORY:nk]</field>
                  <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[sum:SALES:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Tables&quot;</value>
                <value>1061922.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CATEGORY:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[sum:SALES:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CATEGORY:nk]</field>
                  <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[sum:SALES:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Office Machines&quot;</value>
                <value>1218655.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CATEGORY:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[sum:SALES:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CATEGORY:nk]</field>
                  <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[sum:SALES:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chairs  and  Chairmats&quot;</value>
                <value>1164586.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:CATEGORY:nk]</field>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Region Sales Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[usr:Calculation_560698160265564162:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[Four Highest Sales Categories]</field>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]</field>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:REGION:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Region Sales Map 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[usr:KPI - Profit Ratio (copy):nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[Four Highest Sales Categories]</field>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:COUNTRY_REGION:nk]</field>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[none:REGION:nk]</field>
            <field>[federated.0s5ucnr0sb8zl31d7j80g1wauq8d].[usr:KPI - Profit Ratio (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Crosstab + KPI' width='192'>
      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
      IKlBrf8HUtYJFEos964AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Four Highest' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Region Sales Map' width='192'>
      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
      NExKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Region Sales Map 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
