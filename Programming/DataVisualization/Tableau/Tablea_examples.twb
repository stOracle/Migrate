<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Super Store Orders Extract' inline='true' name='federated.18qzbev0mcc43t16e0tj70b04xow' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Super Store Orders' name='dataengine.00g4abm1c1fa5f10qubq40sz5c3o'>
            <connection class='dataengine' dbname='C:\DataVisualization\Tableau\Super Store Orders.tde' schema='Extract' tablename='Extract'>
              <calculations>
                <calculation column='[Number of Records]' formula='1' />
              </calculations>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='dataengine.00g4abm1c1fa5f10qubq40sz5c3o' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CATEGORY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CATEGORY]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CATEGORY</remote-alias>
            <ordinal>0</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Appliances&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Telephones and Communication&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>1</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1523</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aberdeen&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zibo&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTAINER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTAINER]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CONTAINER</remote-alias>
            <ordinal>2</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Jumbo Box&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Wrap Bag&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTINENT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTINENT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CONTINENT</remote-alias>
            <ordinal>3</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Africa&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;South America&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_REGION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY_REGION]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>COUNTRY_REGION</remote-alias>
            <ordinal>4</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>50</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Algeria&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Viet Nam&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_ID</remote-name>
            <remote-type>4</remote-type>
            <local-name>[CUSTOMER_ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CUSTOMER_ID</remote-alias>
            <ordinal>5</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3403</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>3403.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUSTOMER_NAME]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CUSTOMER_NAME</remote-alias>
            <ordinal>6</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3403</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aaron Davies Bruce&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zachary Yu&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_SEGMENT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUSTOMER_SEGMENT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CUSTOMER_SEGMENT</remote-alias>
            <ordinal>7</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Small Business&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPARTMENT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DEPARTMENT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DEPARTMENT</remote-alias>
            <ordinal>8</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISCOUNT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DISCOUNT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DISCOUNT</remote-alias>
            <ordinal>9</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>16</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>0.25</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ITEM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ITEM]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ITEM</remote-alias>
            <ordinal>10</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1260</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;\#10 Self-Seal White Envelopes&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;iDENi80s&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_DATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORDER_DATE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ORDER_DATE</remote-alias>
            <ordinal>12</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1427</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010-01-01&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2013-12-31&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_ID</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ORDER_ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ORDER_ID</remote-alias>
            <ordinal>13</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11270</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>3.0</statistic>
              <statistic aggregation='Max' datatype='real'>91591.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_PRIORITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORDER_PRIORITY]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ORDER_PRIORITY</remote-alias>
            <ordinal>14</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Critical&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Not Specified&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_QUANTITY</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ORDER_QUANTITY]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ORDER_QUANTITY</remote-alias>
            <ordinal>15</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>139</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>180.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POSTAL_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[POSTAL_CODE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>POSTAL_CODE</remote-alias>
            <ordinal>16</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1725</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;10004&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;WC2A&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRODUCT_BASE_MARGIN</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PRODUCT_BASE_MARGIN]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>PRODUCT_BASE_MARGIN</remote-alias>
            <ordinal>17</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>52</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.34999999999999998</statistic>
              <statistic aggregation='Max' datatype='real'>0.84999999999999998</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROFIT</remote-name>
            <remote-type>4</remote-type>
            <local-name>[PROFIT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>PROFIT</remote-alias>
            <ordinal>18</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3341</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>-17686.0</statistic>
              <statistic aggregation='Max' datatype='real'>60844.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REGION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[REGION]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>REGION</remote-alias>
            <ordinal>19</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ROW_ID</remote-name>
            <remote-type>4</remote-type>
            <local-name>[ROW_ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ROW_ID</remote-alias>
            <ordinal>20</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>16798</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>16798.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SALES</remote-name>
            <remote-type>4</remote-type>
            <local-name>[SALES]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SALES</remote-alias>
            <ordinal>21</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4548</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>100119.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHIPPING_COST</remote-name>
            <remote-type>4</remote-type>
            <local-name>[SHIPPING_COST]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SHIPPING_COST</remote-alias>
            <ordinal>22</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>86</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>165.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHIP_DATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SHIP_DATE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SHIP_DATE</remote-alias>
            <ordinal>23</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1459</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;2010-01-02&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;2014-01-17&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHIP_MODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SHIP_MODE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SHIP_MODE</remote-alias>
            <ordinal>24</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Delivery Truck&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Regular Air&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>25</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>149</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Addis Ababa&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;le-de-France&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT_PRICE</remote-name>
            <remote-type>4</remote-type>
            <local-name>[UNIT_PRICE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>UNIT_PRICE</remote-alias>
            <ordinal>26</ordinal>
            <family>SUPERSTORE_SALES_ORDERS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>237</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.0</statistic>
              <statistic aggregation='Max' datatype='real'>6783.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Category' datatype='string' name='[CATEGORY]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Container' datatype='string' name='[CONTAINER]' role='dimension' type='nominal' />
      <column caption='Continent' datatype='string' name='[CONTINENT]' role='dimension' type='nominal' />
      <column caption='Country Region' datatype='string' name='[COUNTRY_REGION]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Customer Id' datatype='real' name='[CUSTOMER_ID]' role='dimension' type='ordinal' />
      <column caption='Customer Name' datatype='string' name='[CUSTOMER_NAME]' role='dimension' type='nominal' />
      <column caption='Customer Segment' datatype='string' name='[CUSTOMER_SEGMENT]' role='dimension' type='nominal' />
      <column caption='Department' datatype='string' name='[DEPARTMENT]' role='dimension' type='nominal' />
      <column caption='Discount' datatype='real' name='[DISCOUNT]' role='measure' type='quantitative' />
      <column caption='Item' datatype='string' name='[ITEM]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Order Date' datatype='date' datatype-customized='true' name='[ORDER_DATE]' role='dimension' type='ordinal' />
      <column caption='Order Id' datatype='real' name='[ORDER_ID]' role='dimension' type='ordinal' />
      <column caption='Order Priority' datatype='string' name='[ORDER_PRIORITY]' role='dimension' type='nominal' />
      <column caption='Order Quantity' datatype='real' name='[ORDER_QUANTITY]' role='measure' type='quantitative' />
      <column caption='Postal Code' datatype='string' name='[POSTAL_CODE]' role='dimension' type='nominal' />
      <column caption='Product Base Margin' datatype='real' name='[PRODUCT_BASE_MARGIN]' role='measure' type='quantitative' />
      <column caption='Profit' datatype='real' name='[PROFIT]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal' />
      <column caption='Row Id' datatype='real' name='[ROW_ID]' role='dimension' type='ordinal' />
      <column caption='Sales' datatype='real' name='[SALES]' role='measure' type='quantitative' />
      <column caption='Shipping Cost' datatype='real' name='[SHIPPING_COST]' role='measure' type='quantitative' />
      <column caption='Ship Date' datatype='string' name='[SHIP_DATE]' role='dimension' type='nominal' />
      <column caption='Ship Mode' datatype='string' name='[SHIP_MODE]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Unit Price' datatype='real' name='[UNIT_PRICE]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country Region,State)' hidden='true' name='[Action (Country Region,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[COUNTRY_REGION]' />
          <groupfilter function='level-members' level='[STATE]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='COUNTRY_REGION, STATE, CITY'>
          <field>[COUNTRY_REGION]</field>
          <field>[STATE]</field>
          <field>[CITY]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.583562' measure-ordering='alphabetic' measure-percentage='0.416438' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:STATE:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jilin Sheng&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nuevo Leo_n&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rgion du Grand Casablanca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zhejiang Sheng&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ceara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Province de Buenos Aires&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;_saka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Istanbul&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Makkah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;State of Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wilaya de Skikda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baghdad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gene_ve&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sa_o Paulo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uppsala Ln&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kano State&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Minas Gerais&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oaxaca&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tianjin Shi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ankara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rajhasthan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liaoning Sheng&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Praha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sichuan Sheng&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vienna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Addis Ababa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madrid&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Provincia de Lima&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Soul&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wellington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bogot D.C.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nairobi Prov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shanghai Shi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;le-de-France&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antioquia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jalisco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rgion Capitale Nationale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tel Aviv-Jaffa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Krung Thep Mahanakhon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Misto Kyyiv&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oppland Fylke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santiago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guangdong Sheng&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lagos State&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Busan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hanoi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leningrad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;National Capital Territory of Delhi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pernambuco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shanxi Sheng&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Catalun_a&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hubei Sheng&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lisboa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prfecture dAichi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sindh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Attiki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tokyo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ar Riyad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Distrito Federal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jiangsu Sheng&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mazowieckie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Cape&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rgion des Lagunes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yunnan Sheng&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Al Iskandariyah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chongqing Shi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Provinsi Jawa Timur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guizhou Sheng&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lazio&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moskva (city)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Parana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shandong Sheng&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Veneto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Auckland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gauteng&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rio Grande do Sul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Al Qahirah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New South Wales&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Scatter Plot' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Forecasting'>
      <table>
        <view>
          <datasources>
            <datasource caption='Super Store Orders Extract' name='federated.18qzbev0mcc43t16e0tj70b04xow' />
          </datasources>
          <datasource-dependencies datasource='federated.18qzbev0mcc43t16e0tj70b04xow'>
            <column caption='Category' datatype='string' name='[CATEGORY]' role='dimension' type='nominal' />
            <column caption='Order Date' datatype='date' datatype-customized='true' name='[ORDER_DATE]' role='dimension' type='ordinal' />
            <column caption='Sales' datatype='real' name='[SALES]' role='measure' type='quantitative' />
            <column-instance column='[SALES]' derivation='Sum' forecast-column-base='[sum:SALES:qk]' forecast-column-type='forecast-value' name='[fVal:sum:SALES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CATEGORY]' derivation='None' name='[none:CATEGORY:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[SALES]' derivation='Sum' name='[sum:SALES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ORDER_DATE]' derivation='Quarter-Trunc' name='[tqr:ORDER_DATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18qzbev0mcc43t16e0tj70b04xow].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18qzbev0mcc43t16e0tj70b04xow].[fVal:sum:SALES:qk]</rows>
        <cols>[federated.18qzbev0mcc43t16e0tj70b04xow].[tqr:ORDER_DATE:qk]</cols>
        <pages>
          <column>[federated.18qzbev0mcc43t16e0tj70b04xow].[none:CATEGORY:nk]</column>
        </pages>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Super Store Orders Extract' name='federated.18qzbev0mcc43t16e0tj70b04xow' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18qzbev0mcc43t16e0tj70b04xow'>
            <column caption='Country Region' datatype='string' name='[COUNTRY_REGION]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[COUNTRY_REGION]' derivation='None' name='[none:COUNTRY_REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18qzbev0mcc43t16e0tj70b04xow].[Longitude (generated)]' field-type='quantitative' max='-4992110.24350949' min='-16432195.620378314' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18qzbev0mcc43t16e0tj70b04xow].[Latitude (generated)]' field-type='quantitative' max='7166201.4699471593' min='2502775.8404444139' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.18qzbev0mcc43t16e0tj70b04xow].[none:COUNTRY_REGION:nk]' />
              <lod column='[federated.18qzbev0mcc43t16e0tj70b04xow].[none:STATE:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18qzbev0mcc43t16e0tj70b04xow].[Latitude (generated)]</rows>
        <cols>[federated.18qzbev0mcc43t16e0tj70b04xow].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Scatter Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Super Store Orders Extract' name='federated.18qzbev0mcc43t16e0tj70b04xow' />
          </datasources>
          <datasource-dependencies datasource='federated.18qzbev0mcc43t16e0tj70b04xow'>
            <column caption='Category' datatype='string' name='[CATEGORY]' role='dimension' type='nominal' />
            <column caption='Country Region' datatype='string' name='[COUNTRY_REGION]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Profit' datatype='real' name='[PROFIT]' role='measure' type='quantitative' />
            <column caption='Sales' datatype='real' name='[SALES]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[CATEGORY]' derivation='None' name='[none:CATEGORY:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROFIT]' derivation='Sum' name='[sum:PROFIT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SALES]' derivation='Sum' name='[sum:SALES:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18qzbev0mcc43t16e0tj70b04xow].[Action (Country Region,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[COUNTRY_REGION]' member='&quot;United States of America&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[STATE]' member='&quot;California&quot;' />
                <groupfilter function='member' level='[STATE]' member='&quot;Oregon&quot;' />
                <groupfilter function='member' level='[STATE]' member='&quot;Washington&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18qzbev0mcc43t16e0tj70b04xow].[Action (Country Region,State)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18qzbev0mcc43t16e0tj70b04xow].[sum:SALES:qk]' field-type='quantitative' max='34482.461333332314' min='-17398.624622142386' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18qzbev0mcc43t16e0tj70b04xow].[sum:PROFIT:qk]' field-type='quantitative' max='11181.457177591532' min='-22195.797733265063' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18qzbev0mcc43t16e0tj70b04xow].[none:STATE:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.18qzbev0mcc43t16e0tj70b04xow].[sum:PROFIT:qk]</rows>
        <cols>[federated.18qzbev0mcc43t16e0tj70b04xow].[sum:SALES:qk]</cols>
        <pages>
          <column>[federated.18qzbev0mcc43t16e0tj70b04xow].[none:CATEGORY:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='53500' id='1' name='Scatter Plot' w='84000' x='0' y='46500' />
              <zone h='46500' id='8' name='Map' w='84000' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='12125' id='6' name='Scatter Plot' pane-specification-id='0' param='[federated.18qzbev0mcc43t16e0tj70b04xow].[none:STATE:nk]' type='color' w='16000' x='84000' y='0' />
              <zone h='14500' id='7' name='Scatter Plot' synchronized='1' type='currpage' w='16000' x='84000' y='12125' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='37'>
    <window class='worksheet' name='Scatter Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.18qzbev0mcc43t16e0tj70b04xow].[none:STATE:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Appliances&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[none:CATEGORY:nk]</field>
            <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[none:STATE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[none:COUNTRY_REGION:nk]</field>
                  <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[none:STATE:nk]</field>
                  <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Latitude (generated)]</field>
                  <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;United States of America&quot;</value>
                <value>&quot;Texas&quot;</value>
                <value>31.25</value>
                <value>-99.25</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[none:COUNTRY_REGION:nk]</field>
                    <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[none:STATE:nk]</field>
                    <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Latitude (generated)]</field>
                    <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;United States of America&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>47.5</value>
                  <value>-120.5</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[none:COUNTRY_REGION:nk]</field>
                    <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[none:STATE:nk]</field>
                    <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Latitude (generated)]</field>
                    <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;United States of America&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>44.0</value>
                  <value>-120.5</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[none:COUNTRY_REGION:nk]</field>
                    <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[none:STATE:nk]</field>
                    <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Latitude (generated)]</field>
                    <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;United States of America&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>37.25</value>
                  <value>-119.75</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Scatter Plot'>
          <current-page>
            <multibucket>
              <bucket>&quot;Bookcases&quot;</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[none:STATE:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' maximized='true' name='Forecasting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18qzbev0mcc43t16e0tj70b04xow].[none:Forecast Indicator:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Appliances&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[none:CATEGORY:nk]</field>
            <field>[federated.18qzbev0mcc43t16e0tj70b04xow].[yr:ORDER_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Forecasting' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
