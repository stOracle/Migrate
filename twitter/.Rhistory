count(user_key) %>%
arrange(desc(n))
test
high_posts <- dt %>%
select(-c("text", "hashtags")) %>%
filter(!is.na(user_key)) %>%
group_by(user_key) %>%
filter(n() > 1000) %>%
count(user_key) %>%
arrange(desc(n))
high_posts
View(high_posts)
high_posts <- dt %>%
select(-c("text", "hashtags")) %>%
filter(!is.na(user_key)) %>%
group_by(user_key) %>%
filter(n() > 1000) %>%
count(user_key) %>%
arrange(desc(n)) %>%
rename(n = "Posts")
high_posts <- dt %>%
select(-c("text", "hashtags")) %>%
filter(!is.na(user_key)) %>%
group_by(user_key) %>%
filter(n() > 1000) %>%
count(user_key) %>%
arrange(desc(n)) %>%
rename(n = Posts)
high_posts <- dt %>%
select(-c("text", "hashtags")) %>%
filter(!is.na(user_key)) %>%
group_by(user_key) %>%
filter(n() > 1000) %>%
count(user_key) %>%
arrange(desc(n)) %>%
rename(posts = n)
View(high_posts)
high_posts <- dt %>%
select(-c("text", "hashtags")) %>%
filter(!is.na(user_key)) %>%
group_by(user_key) %>%
filter(n() > 1000) %>%
count(user_key) %>%
arrange(desc(n)) %>%
rename(post_count = n)
names(dt)
high_posts <- dt %>%
select(c("user_id", "user_key")) %>%
filter(!is.na(user_key)) %>%
group_by(user_key) %>%
filter(n() > 1000) %>%
count(user_key) %>%
arrange(desc(n)) %>%
rename(post_count = n)
high_posts
names(du)
du %>%
filter(user_name == "hyddrox")
du %>%
filter(screen_name == "hyddrox")
prominent <- high_posts["user_key"]
prominent
prominent <- as.vector(high_posts["user_key"])
prominent
class(prominent)
high_posts <- dt %>%
select(c("user_id", "user_key")) %>%
filter(!is.na(user_key)) %>%
group_by(user_key) %>%
filter(n() > 1000) %>%
count(user_key) %>%
arrange(desc(n)) %>%
rename(post_count = n)
View(high_posts)
prominent <-high_posts[["user_key"]]
prominent
class(prominent)
du %>%
filter(screen_name %in% prominent)
filt_user <- du %>%
filter(screen_name %in% prominent)
View(filt_user)
high_posts <- dt %>%
select(c("user_id", "user_key")) %>%
filter(!is.na(user_key)) %>%
group_by(user_key) %>%
filter(n() > 100) %>%
count(user_key) %>%
arrange(desc(n)) %>%
rename(post_count = n)
prominent <-high_posts[["user_key"]]
filt_user <- du %>%
filter(screen_name %in% prominent)
View(filt_user)
View(high_posts)
filt_user <- du %>%
filter(!is.na(screen_name)) %>%
filter(screen_name %in% prominent)
filt_user
filt_user <- du %>%
filter(!is.na(screen_name)) %>%
filter(screen_name %in% prominent) %>%
arrange(screen_name)
filt_user
du %>% filter(screen_name == ameliebaldwin)
du$screen_name <- tolower(du$screen_name)
du %>% filter(screen_name == ameliebaldwin)
filt_user <- du %>%
filter(!is.na(screen_name)) %>%
filter(screen_name %in% prominent) %>%
arrange(screen_name)
filt_user
du %>% filter(screen_name == Ameliebaldwin)
du %>% filter(screen_name == AmelieBaldwin)
filt_user <- du %>%
filter(!is.na(screen_name)) %>%
filter(tolower(screen_name) %in% prominent) %>%
arrange(screen_name)
filt_user
View(filt_user)
high_posts <- dt %>%
select(c("user_id", "user_key")) %>%
filter(!is.na(user_key)) %>%
group_by(user_key) %>%
filter(n() > 1000) %>%
count(user_key) %>%
arrange(desc(n)) %>%
rename(post_count = n)
prominent <-high_posts[["user_key"]]
du %>% filter(screen_name == AmelieBaldwin)
filt_user <- du %>%
filter(!is.na(screen_name)) %>%
filter(tolower(screen_name) %in% prominent) %>%
arrange(screen_name)
View(filt_user)
View(high_posts)
high_posts <- dt %>%
select(c("user_id", "user_key")) %>%
filter(!is.na(user_key)) %>%
group_by(user_key) %>%
filter(n() > 1000) %>%
count(user_key) %>%
arrange(user_key) %>%
rename(post_count = n)
prominent <-high_posts[["user_key"]]
View(high_posts)
du %>% filter(screen_name == tolower(AmelieBaldwin))
du %>% filter(screen_name == tolower("AmelieBaldwin"))
View(du)
du %>% filter(screen_name == "ameliebaldwin")
View(high_posts)
View(filt_user)
dt <- dt %>% rename(screen_name = user_name)
dt <- dt %>% rename(screen_name = user_id)
View(dt)
View(dt)
dt <- read.csv(file_path, stringsAsFactors = FALSE)
dt <- dt %>% rename(screen_name = user_key)
View(dt)
filt_user <- du %>%
filter(!is.na(screen_name)) %>%
filter(tolower(screen_name) %in% prominent) %>%
select("screen_name", "user_name", "followers", "user_time_zone", "lang", "friends_count")
filt_user <- du %>%
filter(!is.na(screen_name)) %>%
filter(tolower(screen_name) %in% prominent) %>%
select("screen_name", "user_name", "followers_count", "user_time_zone", "lang", "friends_count")
filt_user <- du %>%
filter(!is.na(screen_name)) %>%
filter(tolower(screen_name) %in% prominent) %>%
select("screen_name", "user_name", "followers_count", "user_time_zone", "lang", "friends_count") %>%
arrange(screen_name)
filt_user
View(filt_user)
filt_user %>% group_by(user_time_zone)
filt_user %>% count(user_time_zone)
View(filt_user)
du %>% count(user_time_zone)
wd
dir
wd
View(filt_user)
test <- dt %>%
filter(screen_name == "ten_gop")
View(test)
du <- read.csv(file_path2, stringsAsFactors = FALSE)
View(du)
du$screen_name <- tolower(du$screen_name)
View(du)
test <- du %>%
arrange(desc(followers_count))
View(test)
names(dt)
names(du)
join <- left_join(du, dt, by ="user_id")
join
View(join)
names(du)
glimpse(du)
file_path <- "tweets.csv"
file_path2 <- "users.csv"
dt <- read.csv(file_path, stringsAsFactors = FALSE)
du <- read.csv(file_path2, stringsAsFactors = FALSE)
dt <- dt %>% rename(screen_name = user_key)
du$screen_name <- tolower(du$screen_name)
du <- du %>%
select("user_id", "screen_name", "user_location", "followers_count", "statuses_count",
"user_time_zone", "lang", "created_at", "friends_count")
dt <- dt %>%
select("user_id", "screen_name", "tweet_id", "created_str", "text", "hashtags")
View(dt)
View(du)
test <- du %>%
seperate(created_at, c("weekday_created", "month_created", "date_created", "time_created", "del", "year"))
require(tidyr)
test <- du %>%
seperate(created_at, c("weekday_created", "month_created", "date_created", "time_created", "del", "year"))
test <- du %>%
separate(created_at, c("weekday_created", "month_created", "date_created", "time_created", "del", "year"))
View(du)
View(test)
test <- du %>%
separate(created_at, c("weekday_created", "month_created", "date_created", "hour", "minute", "sec", "del", "year"))
View(test)
test <- du %>%
separate(created_at, c("weekday", "month", "date", "hour", "minute", "sec", "del", "year"))
test2 <- test %>%
unite("month", "date", "year")
View(test2)
View(test)
test2 <- test %>%
unite("date_created", "month", "date", "year")
View(test2)
test2 <- test %>%
unite("date_created", "year", "month", "date") %>%
# reorganizes the columns and eliminates unneccessary ones
du <- du %>%
select("user_id", "screen_name", "user_location", "followers_count", "statuses_count",
"user_time_zone", "lang", "created_at", "friends_count")
test2 <- test %>%
unite("date_created", "year", "month", "date")
View(test2)
test2 <- test %>%
unite("date_created", "year", "month", "date", sep = "-")
View(test2)
test2 <- match(month, month.abb)
test2 <- match("month", month.abb)
test2 <- test %>% match("month", month.abb)
test2 <- test# %>% match("month", month.abb)
test2[month] <- match(test2[month], month.abb)
test2[month] <- match(test2["month"], month.abb)
test2[month] <- match("month", month.abb)
test2[month] <- match(month, month.abb)
test <- du %>%
separate(created_at, c("weekday", "month", "date", "hour", "minute", "sec", "del", "year"))
View(test)
test2 <- du %>%
mutate(month = month.abb[month])
View(du)
du <- du %>%
separate(created_at, c("weekday", "month", "date", "hour", "minute", "sec", "del", "year"))
View(du)
test2 <- du %>%
mutate(month = month.abb[month])
View(test2)
test2 <- du
View(test2)
test2 <- mutate(month = month.abb[month])
test2 <- mutate(test2, month = month.abb[month])
View(test2)
test2 <- du
test2 <- mutate(test2, month2 = month.abb[month])
View(test2)
test2 <- mutate(test2, month2 = month.abb(test2[month]))
test2 <- mutate(test2, month2 = month.abb[month])
test2 %>% match("month", month.abb)
View(test2)
glimpse(test2)
test2 <- system.time(mutate(test2, month2 = month.abb[month]))
test2 <- du
test2 <- transform(test2, month2 = month.abb[month])
View(test2)
dt <- read.csv(file_path, stringsAsFactors = FALSE)
du <- read.csv(file_path2, stringsAsFactors = FALSE)
dt <- dt %>% rename(screen_name = user_key)
du$screen_name <- tolower(du$screen_name)
du <- du %>%
separate(created_at, c("weekday", "month", "date", "hour", "minute", "sec", "del", "year"))
test2 <- du
glimpse(test2)
test2 <- mutate(month2 = month.abb[month])
test2 <- mutate(test2, month2 = month.abb[tolower(month)])
View(test2)
month.abb
test2 <- mutate(test2, month2 = tolower(month.abb[month]))
View(test2)
test2 <- mutate(test2, month2 = tolower(month.abb[tolower(month)]))
test2 <- du
test2 <- mutate(test2, month2 = tolower(month.abb[tolower(month)]))
View(test2)
test2 <- du
test2[month]
test2["month"]
install.packages("chron")
require(chron)
test2["month"] <- as.month
test2["month"] <- match(test2["month"], month.abb)
View(test2)
test2 <- du
glimpse(test2)
test <- du
test %>%
unite("date_created", "year", "month", "date", sep = "-")
test <- test %>%
unite("date_created", "year", "month", "date", sep = "-")
View(test)
dt <- dt %>%
seperate(created_str, c("date_created", "time_created"))
dt <- dt %>%
separate(created_str, c("date_created", "time_created"))
View(dt)
dt <- dt %>%
separate(created_str, c("date_created", "time_created"), sep = " ")
dt <- read.csv(file_path, stringsAsFactors = FALSE)
dt <- dt %>%
separate(created_str, c("date_created", "time_created"), sep = " ")
View(dt)
file_path <- "tweets.csv"
file_path2 <- "users.csv"
dt <- read.csv(file_path, stringsAsFactors = FALSE)
du <- read.csv(file_path2, stringsAsFactors = FALSE)
dt <- dt %>% rename(screen_name = user_key)
du$screen_name <- tolower(du$screen_name)
du <- du %>%
separate(created_at, c("weekday", "month", "date", "hour", "minute", "sec", "del", "year"))
dt <- dt %>%
separate(created_str, c("date_created", "time_created"), sep = " ")
du <- du %>%
select("user_id", "screen_name", "user_location", "followers_count", "statuses_count",
"user_time_zone", "lang", "month", "year", "friends_count")
dt <- dt %>%
select("user_id", "screen_name", "tweet_id", "date_created", "text", "hashtags")
require(tidyr)
require(dplyr)
require(rlang)
require(ggplot2)
require("jsonlite")
require("RCurl")
require(utf8)
require(chron)
setwd("C:/Users/srauner/git/twitter")
# open .csv files and bring them in as dataframes
file_path <- "tweets.csv"
file_path2 <- "users.csv"
dt <- read.csv(file_path, stringsAsFactors = FALSE)
du <- read.csv(file_path2, stringsAsFactors = FALSE)
# fix column names so columns match between tables
dt <- dt %>% rename(screen_name = user_key)
du$screen_name <- tolower(du$screen_name)
# fix date columns
du <- du %>%
separate(created_at, c("weekday", "month", "date", "hour", "minute", "sec", "del", "year"))
dt <- dt %>%
separate(created_str, c("date_created", "time_created"), sep = " ")
# reorganizes the columns and eliminates unneccessary ones
du <- du %>%
select("user_id", "screen_name", "user_location", "followers_count", "statuses_count",
"user_time_zone", "lang", "month", "year", "friends_count")
dt <- dt %>%
select("user_id", "screen_name", "tweet_id", "date_created", "text", "hashtags")
# write the new .csv files
write.csv(du, file = "users_clean.csv")
write.csv(dt, file = "tweets_clean.csv")
require(tidyr)
require(dplyr)
require(rlang)
require(ggplot2)
require("jsonlite")
require("RCurl")
require(utf8)
require(chron)
setwd("C:/Users/srauner/git/twitter")
# open .csv files and bring them in as dataframes
file_path <- "tweets.csv"
file_path2 <- "users.csv"
dt <- read.csv(file_path, stringsAsFactors = FALSE)
du <- read.csv(file_path2, stringsAsFactors = FALSE)
# fix column names so columns match between tables
dt <- dt %>% rename(screen_name = user_key)
du$screen_name <- tolower(du$screen_name)
du <- du %>%
filter(!is.na(user_id))
dt <- dt %>%
filter(!is.na(user_id))
# fix date columns
du <- du %>%
separate(created_at, c("weekday", "month", "date", "hour", "minute", "sec", "del", "year"))
dt <- dt %>%
separate(created_str, c("date_created", "time_created"), sep = " ")
# reorganizes the columns and eliminates unneccessary ones
du <- du %>%
select("user_id", "screen_name", "user_location", "followers_count", "statuses_count",
"user_time_zone", "lang", "month", "year", "friends_count")
dt <- dt %>%
select("user_id", "screen_name", "tweet_id", "date_created", "text", "hashtags")
# write the new .csv files
write.csv(du, file = "users_clean.csv")
write.csv(dt, file = "tweets_clean.csv")
require(tidyr)
require(dplyr)
require(rlang)
require(ggplot2)
require("jsonlite")
require("RCurl")
require(utf8)
require(chron)
setwd("C:/Users/srauner/git/twitter")
# open .csv files and bring them in as dataframes
file_path <- "tweets.csv"
file_path2 <- "users.csv"
dt <- read.csv(file_path, stringsAsFactors = FALSE)
du <- read.csv(file_path2, stringsAsFactors = FALSE)
# fix column names so columns match between tables
dt <- dt %>% rename(screen_name = user_key)
du$screen_name <- tolower(du$screen_name)
# fix date columns
du <- du %>%
separate(created_at, c("weekday", "month", "date", "hour", "minute", "sec", "del", "year"))
dt <- dt %>%
separate(created_str, c("date_created", "time_created"), sep = " ")
# reorganizes the columns and eliminates unneccessary ones
du <- du %>%
select("screen_name", "user_location", "followers_count", "statuses_count",
"user_time_zone", "lang", "month", "year", "friends_count")
dt <- dt %>%
select("screen_name", "tweet_id", "date_created", "text", "hashtags")
# write the new .csv files
write.csv(du, file = "users_clean.csv")
write.csv(dt, file = "tweets_clean.csv")
du_final <- du %>%
filter(!is.na(followers_count)) %>%
filter(!is.na(statuses_count)) %>%
filter(!is.na(month)) %>%
filter(!is.na(year)) %>%
filter(!is.na(friends_count))
du_final <- du %>%
filter(!is.na(user_id)) %>%
filter(!is.na(followers_count)) %>%
filter(!is.na(statuses_count)) %>%
filter(!is.na(month)) %>%
filter(!is.na(year)) %>%
filter(!is.na(friends_count))
View(du)
require(tidyr)
require(dplyr)
require(rlang)
require(ggplot2)
require("jsonlite")
require("RCurl")
require(utf8)
require(chron)
setwd("C:/Users/srauner/git/twitter")
# open .csv files and bring them in as dataframes
file_path <- "tweets.csv"
file_path2 <- "users.csv"
dt <- read.csv(file_path, stringsAsFactors = FALSE)
du <- read.csv(file_path2, stringsAsFactors = FALSE)
# fix column names so columns match between tables
dt <- dt %>% rename(screen_name = user_key)
du$screen_name <- tolower(du$screen_name)
# fix date columns
du <- du %>%
separate(created_at, c("weekday", "month", "date", "hour", "minute", "sec", "del", "year"))
dt <- dt %>%
separate(created_str, c("date_created", "time_created"), sep = " ")
# reorganizes the columns and eliminates unneccessary ones
du <- du %>%
select("user_id", "screen_name", "user_location", "followers_count", "statuses_count",
"user_time_zone", "lang", "month", "year", "friends_count")
dt <- dt %>%
select("user_id", "screen_name", "tweet_id", "date_created")
du_final <- du %>%
filter(!is.na(user_id)) %>%
filter(!is.na(screen_name)) %>%
filter(!is.na(followers_count)) %>%
filter(!is.na(statuses_count)) %>%
filter(!is.na(month)) %>%
filter(!is.na(year)) %>%
filter(!is.na(friends_count))
dt_final <- dt %>%
filter(!is.na(user_id)) %>%
filter(!is.na(screen_name)) %>%
filter(!is.na(tweet_id))
# write the new .csv files
write.csv(du_final, file = "users_clean.csv")
write.csv(dt_final, file = "tweets_clean.csv")
View(du)
require(tidyr)
require(dplyr)
require(rlang)
require(ggplot2)
require("jsonlite")
require("RCurl")
require(utf8)
require(chron)
setwd("C:/Users/srauner/git/twitter")
file_path <- "tweets.csv"
file_path2 <- "users.csv"
dt <- read.csv(file_path, stringsAsFactors = FALSE)
du <- read.csv(file_path2, stringsAsFactors = FALSE)
View(dt)
dt <- dt %>% rename(screen_name = user_key)
